;; Testing of some EVAL() operators error (argument count)

;; deifne
(define a 10)
;10
(define)
;err!
(define a)
;err!
(define a 10 10)
;err!
(define 1 10)
;err!

;; let*
(let* (a 10 b a) b)
;10
(let* [a 10] a)
;err!
(let*)
;err!
(let* ())
;err!
(let* (a 1) (a) a)
;err!
(let* (1 10) 1)
;err!
(let* 10 100)
;err!

;; do
(do)
;err!
(do ())
;()
(do () () () ())
;()

;; if
(if true true false)
;true
(if false true false)
;false
(if)
;err!
(if true)
;err!
(if true false)
;false
(if true true false 100)
;err!

;; fn
(fn)
;err!
(fn ())
;err!
(fn 1)
;err!
(fn () 10)
;#<lambda>
(fn [] 10)
;err!
(fn 10 20)
;err!
(fn (1) 10)
;err!
(fn (a) (+ 20 a))
;#<lambda>
(fn (a) [a a a])
;#<lambda>
((fn (a) [  a a a ]) 20)
;[20 20 20]

;; while
(while)
;err!